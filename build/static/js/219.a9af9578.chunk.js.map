{"version":3,"sources":["views/apps/transaction/TransactionHistory.js"],"names":["i","TransactionHistory","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","orderId","total_amt","gst","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","id","console","log","axios","error","this","sm","tag","length","size","right","onClick","placeholder","onChange","e","target","value","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/219.a9af9578.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\n\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport \"../../../assets/scss/pages/users.scss\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\n//import classnames from \"classnames\";\nimport axiosConfig from \"../../../axiosConfig\";\n\nclass TransactionHistory extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 100,\n        filter: true,\n      },\n\n      // {\n      //   headerName: \"Product Name\",\n      //   field: \"productname\",\n      //   filter: true,\n      //   width: 200,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div>\n      //         <span>{params.data.productid?.product?.productname}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      // {\n      //   headerName: \"Image\",\n      //   field: \"image\",\n      //   filter: true,\n      //   width: 200,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div>\n      //         <span>\n      //           <img\n      //             width=\"50px\"\n      //             src={params.data?.productid?.product?.image}\n      //           />\n      //         </span>\n      //       </div>\n      //     );\n      //   },\n      // },\n\n      {\n        headerName: \"OrderID\",\n        field: \"OrderID\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data?.orderId}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Price\",\n        field: \"price\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data?.total_amt - params.data?.gst}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Gst\",\n        field: \"gst\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data?.gst}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Total price\",\n        field: \"total_amt\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data?.total_amt}</span>\n            </div>\n          );\n        },\n      },\n\n      // {\n      //   headerName: \"Actions\",\n      //   field: \"sortorder\",\n      //   width: 200,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"actions cursor-pointer\">\n      //         <Route\n      //           render={({ history }) => (\n      //             <Eye\n      //               className=\"mr-50\"\n      //               size=\"25px\"\n      //               color=\"green\"\n      //               onClick={() =>\n      //                 history.push(\n      //                   `/app/customer/viewCustomer/${params.data._id}`\n      //                 )\n      //               }\n      //             />\n      //           )}\n      //         />\n      //         <Route\n      //           render={({ history }) => (\n      //             <Edit\n      //               className=\"mr-50\"\n      //               size=\"25px\"\n      //               color=\"blue\"\n      //               onClick={() => history.push(\"/app/customer/editCustomer\")}\n      //             />\n      //           )}\n      //         />\n      //         <Trash2\n      //           className=\"mr-50\"\n      //           size=\"25px\"\n      //           color=\"red\"\n      //           onClick={() => {\n      //             let selectedData = this.gridApi.getSelectedRows();\n      //             this.runthisfunction(params.data._id);\n      //             this.gridApi.updateRowData({ remove: selectedData });\n      //           }}\n      //         />\n      //       </div>\n      //     );\n      //   },\n      // },\n    ],\n  };\n  async componentDidMount() {\n    await axiosConfig.get(`admin/all_transaction_list`).then((response) => {\n      let rowData = response.data.data;\n      this.setState({ rowData });\n    });\n  }\n\n  async runthisfunction(id) {\n    console.log(id);\n    await axios.get(`/admin/delcustomer/${id}`).then(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      <Row className=\"app-user-list\">\n        <Col sm=\"12\"></Col>\n        <Col sm=\"12\">\n          <Card>\n            <Row className=\"m-2\">\n              <Col>\n                <h1 sm=\"6\" className=\"float-left\">\n                  Transaction History List\n                </h1>\n              </Col>\n            </Row>\n            <CardBody>\n              {this.state.rowData === null ? null : (\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                    <div className=\"mb-1\">\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                        <DropdownToggle tag=\"div\">\n                          {this.gridApi\n                            ? this.state.currenPageSize\n                            : \"\" * this.state.getPageSize -\n                              (this.state.getPageSize - 1)}{\" \"}\n                          -{\" \"}\n                          {this.state.rowData.length -\n                            this.state.currenPageSize * this.state.getPageSize >\n                          0\n                            ? this.state.currenPageSize * this.state.getPageSize\n                            : this.state.rowData.length}{\" \"}\n                          of {this.state.rowData.length}\n                          <ChevronDown className=\"ml-50\" size={15} />\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(20)}\n                          >\n                            20\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(50)}\n                          >\n                            50\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(100)}\n                          >\n                            100\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(134)}\n                          >\n                            134\n                          </DropdownItem>\n                        </DropdownMenu>\n                      </UncontrolledDropdown>\n                    </div>\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                      <div className=\"table-input mr-1\">\n                        <Input\n                          placeholder=\"search...\"\n                          onChange={(e) =>\n                            this.updateSearchQuery(e.target.value)\n                          }\n                          value={this.state.value}\n                        />\n                      </div>\n                      <div className=\"export-btn\">\n                        <Button.Ripple\n                          color=\"primary\"\n                          onClick={() => this.gridApi.exportDataAsCsv()}\n                        >\n                          Export as CSV\n                        </Button.Ripple>\n                      </div>\n                    </div>\n                  </div>\n                  <ContextLayout.Consumer>\n                    {(context) => (\n                      <AgGridReact\n                        gridOptions={{}}\n                        rowSelection=\"multiple\"\n                        defaultColDef={defaultColDef}\n                        columnDefs={columnDefs}\n                        rowData={rowData}\n                        onGridReady={this.onGridReady}\n                        colResizeDefault={\"shift\"}\n                        animateRows={true}\n                        floatingFilter={false}\n                        pagination={true}\n                        paginationPageSize={this.state.paginationPageSize}\n                        pivotPanelShow=\"always\"\n                        enableRtl={context.state.direction === \"rtl\"}\n                      />\n                    )}\n                  </ContextLayout.Consumer>\n                </div>\n              )}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default TransactionHistory;\n"],"sourceRoot":""}