{"version":3,"sources":["views/apps/report/PayoutReport.js"],"names":["i","PayoutReport","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","console","log","data","reqsted_amt","className","createdAt","split","transactionId","value","status","runthisfunction","id","axiosConfig","get","then","res","catch","err","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","response","PendingWithdrawl","this","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","render","history","onClick","push","tag","length","size","right","placeholder","onChange","e","target","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/209.97b687c1.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\n\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport \"../../../assets/scss/pages/users.scss\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\n//import classnames from \"classnames\";\nimport axiosConfig from \"../../../axiosConfig\";\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\n\nclass PayoutReport extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 100,\n        filter: true,\n        // checkboxSelection: true,\n        // headerCheckboxSelectionFilteredOnly: true,\n        // headerCheckboxSelection: true,\n      },\n\n      {\n        headerName: \"Requested Amount\",\n        field: \"payout_amt\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          console.log(params);\n          return (\n            <div>\n              <span>{params.data?.reqsted_amt}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Transaction Date\",\n        field: \"createdAt\",\n        width: 220,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.createdAt.split(\"T\")[0]}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Transaction ID\",\n        field: \"transactionId\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>#{params.data.transactionId}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Payout Request Status\",\n        field: \"status\",\n        filter: true,\n        width: 150,\n        cellRendererFramework: (params) => {\n          return params.value === \"Success\" ? (\n            <div className=\"badge badge-pill badge-success\">\n              {params.data.status}\n            </div>\n          ) : params.value === \"Pending\" ? (\n            <div className=\"badge badge-warning\">\n              <b>{params.data.status}</b>\n            </div>\n          ) : null;\n        },\n      },\n\n      // {\n      //   headerName: \"Actions\",\n      //   field: \"sortorder\",\n      //   width: 200,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"actions cursor-pointer\">\n      //         {/* <Route\n      //           render={({ history }) => (\n      //             <Eye\n      //               className=\"mr-50\"\n      //               size=\"25px\"\n      //               color=\"green\"\n      //               onClick={() =>\n      //                 history.push(\n      //                   `/app/customer/viewCustomer/${params.data._id}`\n      //                 )\n      //               }\n      //             />\n      //           )}\n      //         /> */}\n      //         {/* <Route\n      //           render={({ history }) => (\n      //             <Edit\n      //               className=\"mr-50\"\n      //               size=\"25px\"\n      //               color=\"blue\"\n      //               onClick={() => history.push(\"/app/customer/editCustomer\")}\n      //             />\n      //           )}\n      //         /> */}\n      //         <Trash2\n      //           className=\"mr-50\"\n      //           size=\"25px\"\n      //           color=\"red\"\n      //           onClick={() => {\n      //             let selectedData = this.gridApi.getSelectedRows();\n      //             this.runthisfunction(params.data._id);\n      //             this.gridApi.updateRowData({ remove: selectedData });\n      //           }}\n      //         />\n      //       </div>\n      //     );\n      //   },\n      // },\n    ],\n  };\n  runthisfunction = (id) => {\n    axiosConfig\n      .get(`/admin/dltPayoutlist/${id}`)\n      .then((res) => {\n        // console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  async componentDidMount() {\n    await axiosConfig.get(`/user/PayoutList`).then((response) => {\n      let rowData = response.data.data;\n      console.log(rowData);\n      let PendingWithdrawl = rowData?.filter(\n        (value) => value?.status === \"Pending\"\n      );\n      this.setState({ rowData: PendingWithdrawl });\n    });\n  }\n\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      console.log(rowData),\n      (\n        <div>\n          <Breadcrumbs\n            breadCrumbTitle=\"Payout Report\"\n            breadCrumbParent=\"Home\"\n            breadCrumbActive=\"Payout Report\"\n          />\n\n          <Row className=\"app-user-list\">\n            <Col sm=\"12\"></Col>\n            <Col sm=\"12\">\n              <Card>\n                <Row className=\"m-2\">\n                  <Col>\n                    <h1 sm=\"6\" className=\"float-left\">\n                      Payout Report\n                    </h1>\n                  </Col>\n                  <Col>\n                    <Route\n                      render={({ history }) => (\n                        <Button\n                          className=\" btn btn-success float-right\"\n                          onClick={() =>\n                            history.push(\"/app/report/payoutaddrequest\")\n                          }\n                        >\n                          Add Payout Request\n                        </Button>\n                      )}\n                    />\n                  </Col>\n                </Row>\n                <CardBody>\n                  {this.state.rowData === null ? null : (\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                        <div className=\"mb-1\">\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                            <DropdownToggle tag=\"div\">\n                              {this.gridApi\n                                ? this.state.currenPageSize\n                                : \"\" * this.state.getPageSize -\n                                  (this.state.getPageSize - 1)}{\" \"}\n                              -{\" \"}\n                              {this.state.rowData.length -\n                                this.state.currenPageSize *\n                                  this.state.getPageSize >\n                              0\n                                ? this.state.currenPageSize *\n                                  this.state.getPageSize\n                                : this.state.rowData.length}{\" \"}\n                              of {this.state.rowData.length}\n                              <ChevronDown className=\"ml-50\" size={15} />\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                              <DropdownItem\n                                tag=\"div\"\n                                onClick={() => this.filterSize(20)}\n                              >\n                                20\n                              </DropdownItem>\n                              <DropdownItem\n                                tag=\"div\"\n                                onClick={() => this.filterSize(50)}\n                              >\n                                50\n                              </DropdownItem>\n                              <DropdownItem\n                                tag=\"div\"\n                                onClick={() => this.filterSize(100)}\n                              >\n                                100\n                              </DropdownItem>\n                              <DropdownItem\n                                tag=\"div\"\n                                onClick={() => this.filterSize(134)}\n                              >\n                                134\n                              </DropdownItem>\n                            </DropdownMenu>\n                          </UncontrolledDropdown>\n                        </div>\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                          <div className=\"table-input mr-1\">\n                            <Input\n                              placeholder=\"search...\"\n                              onChange={(e) =>\n                                this.updateSearchQuery(e.target.value)\n                              }\n                              value={this.state.value}\n                            />\n                          </div>\n                          <div className=\"export-btn\">\n                            <Button.Ripple\n                              color=\"primary\"\n                              onClick={() => this.gridApi.exportDataAsCsv()}\n                            >\n                              Export as CSV\n                            </Button.Ripple>\n                          </div>\n                        </div>\n                      </div>\n                      <ContextLayout.Consumer>\n                        {(context) => (\n                          <AgGridReact\n                            gridOptions={{}}\n                            rowSelection=\"multiple\"\n                            defaultColDef={defaultColDef}\n                            columnDefs={columnDefs}\n                            rowData={rowData}\n                            onGridReady={this.onGridReady}\n                            colResizeDefault={\"shift\"}\n                            animateRows={true}\n                            floatingFilter={false}\n                            pagination={true}\n                            paginationPageSize={this.state.paginationPageSize}\n                            pivotPanelShow=\"always\"\n                            enableRtl={context.state.direction === \"rtl\"}\n                          />\n                        )}\n                      </ContextLayout.Consumer>\n                    </div>\n                  )}\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      )\n    );\n  }\n}\nexport default PayoutReport;\n"],"sourceRoot":""}