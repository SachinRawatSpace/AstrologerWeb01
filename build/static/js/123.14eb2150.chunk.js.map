{"version":3,"sources":["views/apps/Uploads/Uploads.js","../node_modules/reactstrap/es/Label.js"],"names":["Uploads","useState","video","setvideo","lg","sm","md","className","onClick","history","goBack","color","style","name","onChange","e","target","files","accept","type","astroid","localStorage","getItem","console","log","gallry","FormData","append","axiosConfig","post","then","res","data","message","swal","catch","err","response","size","defaultProps","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","order","offset","propTypes","children","node","hidden","check","for","tag","tagPropType","cssModule","object","xs","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Label","props","Tag","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","mapToCssModules","classNames","classes","length","React","createElement","_extends"],"mappings":"sVAkCMA,EAAU,WACd,MAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KA8CtB,OACE,6BACE,6BACE,6BACE,kBAAC,IAAI,KACH,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpB,kBAAC,IAAG,KACF,yBAAKC,UAAU,oBACb,wBAAIA,UAAU,kBAAgB,4BAIpC,kBAAC,IAAG,KACF,yBAAKA,UAAU,kDACb,6BACE,kBAAC,IAAM,CACLC,QAAS,WACPC,IAAQC,UAGVC,MAAM,WAEL,IAAG,YAOd,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACJ,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,kBAAC,IAAG,CAACA,UAAU,cACb,kBAAC,IAAG,KACF,6BACE,kBAAC,IAAK,KACJ,uBAAGK,MAAO,CAAED,MAAO,QAAQ,wBACH,MAG1B,kBAAC,IAAK,CACJE,KAAK,OACLC,SAAU,SAACC,GAAC,OAAKZ,EAASY,EAAEC,OAAOC,MAAM,KACzCC,OAAO,4BACPC,KAAK,WAIX,kBAAC,IAAG,KACF,yBAAKZ,UAAU,iBACb,kBAAC,IAAM,CACLC,QAhGA,WACxB,IAAMY,EAAUC,aAAaC,QAAQ,WAErCC,QAAQC,IAAItB,GACZqB,QAAQC,IAAIJ,GAEZ,IAAMK,EAAS,IAAIC,SACnBD,EAAOE,OAAO,UAAWP,GACzBK,EAAOE,OAAO,OAAQzB,GACtB0B,IACGC,KAAK,6BAA8BJ,GACnCK,MAAK,SAACC,GACLR,QAAQC,IAAIO,GACc,aAAnB,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKC,KAAKC,UACZC,IAAK,4BAGRC,OAAM,SAACC,GACNb,QAAQC,IAAIY,EAAIC,cA+EIC,KAAK,KACL/B,UAAU,uBACVI,MAAM,WAAS,sBAsD3CX,EAAQuC,aA/Ja,GAkKNvC,a,iCClMf,yEAEIwC,EAAY,CAAC,YAAa,YAAa,SAAU,SAAU,MAAO,QAAS,OAAQ,OAMnFC,EAAqBC,IAAUC,UAAU,CAACD,IAAUE,OAAQF,IAAUG,SACtEC,EAAcJ,IAAUC,UAAU,CAACD,IAAUK,KAAML,IAAUG,OAAQH,IAAUE,OAAQF,IAAUM,MAAM,CACzGV,KAAMG,EACNQ,MAAOR,EACPS,OAAQT,MAENU,EAAY,CACdC,SAAUV,IAAUW,KACpBC,OAAQZ,IAAUK,KAClBQ,MAAOb,IAAUK,KACjBT,KAAMI,IAAUG,OAChBW,IAAKd,IAAUG,OACfY,IAAKC,cACLnD,UAAWmC,IAAUG,OACrBc,UAAWjB,IAAUkB,OACrBC,GAAIf,EACJzC,GAAIyC,EACJxC,GAAIwC,EACJ1C,GAAI0C,EACJgB,GAAIhB,EACJiB,OAAQrB,IAAUsB,OAEhBzB,EAAe,CACjBkB,IAAK,QACLM,OAzBc,CAAC,KAAM,KAAM,KAAM,KAAM,OA4BrCE,EAAqB,SAA4BC,EAAMC,EAAUC,GACnE,OAAgB,IAAZA,GAAgC,KAAZA,EACfF,EAAO,MAAQ,OAASC,EACV,SAAZC,EACFF,EAAO,WAAa,OAASC,EAAW,QAG1CD,EAAO,OAASE,EAAU,OAASD,EAAW,IAAMC,GAGzDC,EAAQ,SAAeC,GACzB,IAAI/D,EAAY+D,EAAM/D,UAClBoD,EAAYW,EAAMX,UAClBL,EAASgB,EAAMhB,OACfS,EAASO,EAAMP,OACfQ,EAAMD,EAAMb,IACZF,EAAQe,EAAMf,MACdjB,EAAOgC,EAAMhC,KACbkC,EAAUF,EAAMd,IAChBiB,EAAaC,YAA8BJ,EAAO9B,GAElDmC,EAAa,GACjBZ,EAAOa,SAAQ,SAAUT,EAAUU,GACjC,IAAIC,EAAaR,EAAMH,GAGvB,UAFOM,EAAWN,GAEbW,GAA6B,KAAfA,EAAnB,CAIA,IACIC,EADAb,GAAQW,EAGZ,GAAIG,mBAASF,GAAa,CACxB,IAAIG,EAEAC,EAAkBhB,EAAO,IAAM,IAAMC,EAAW,IACpDY,EAAWd,EAAmBC,EAAMC,EAAUW,EAAWxC,MACzDqC,EAAWQ,KAAKC,0BAAgBC,MAAYJ,EAAc,IAAgBF,GAAYD,EAAWxC,MAA4B,KAApBwC,EAAWxC,KAAa2C,EAAY,QAAUC,EAAkBJ,EAAW7B,OAAS6B,EAAW7B,OAA8B,IAArB6B,EAAW7B,MAAagC,EAAY,SAAWC,EAAkBJ,EAAW5B,QAAU4B,EAAW5B,QAAgC,IAAtB4B,EAAW5B,OAAc+B,KAAgBtB,QAErWoB,EAAWd,EAAmBC,EAAMC,EAAUW,GAC9CH,EAAWQ,KAAKJ,OAGpB,IAAIO,EAAUF,0BAAgBC,IAAW9E,IAAW+C,GAAS,YAAmBC,GAAQ,qBAA4BjB,GAAO,kBAAoBA,EAAcqC,IAAYA,EAAWY,QAAS,kBAA2B5B,GACxN,OAAoB6B,IAAMC,cAAclB,EAAKmB,YAAS,CACpDlB,QAASA,GACRC,EAAY,CACblE,UAAW+E,MAIfjB,EAAMlB,UAAYA,EAClBkB,EAAM9B,aAAeA,EACN8B","file":"static/js/123.14eb2150.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { history } from \"../../../history\";\n\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  Label,\n} from \"reactstrap\";\nimport axiosConfig from \"../../../axiosConfig\";\nimport \"../../../assets/scss/video.scss\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\n//import classnames from \"classnames\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../assets/scss/pages/users.scss\";\nimport { Route } from \"react-router-dom\";\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport swal from \"sweetalert\";\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\nconst Uploads = () => {\n  const [video, setvideo] = useState(\"\");\n  // const [image, setimage] = useState({});\n\n  const handlevideoUpload = () => {\n    const astroid = localStorage.getItem(\"astroId\");\n\n    console.log(video);\n    console.log(astroid);\n\n    const gallry = new FormData();\n    gallry.append(\"astroId\", astroid);\n    gallry.append(\"file\", video);\n    axiosConfig\n      .post(`/admin/upload_astrogallery`, gallry)\n      .then((res) => {\n        console.log(res);\n        if (res?.data.message === \"success\") {\n          swal(\" Uploaded Sucessfully\");\n        }\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n\n    // if (video?.type?.split(\"/\")[0] === \"image\") {\n    // }\n    // if (video?.type?.split(\"/\")[0] === \"video\") {\n    //   gallry.append(\"astroId\", astroid);\n    //   gallry.append(\"video\", video);\n\n    //   axiosConfig\n    //     .post(`/admin/upload_astrogallery`, gallry)\n    //     .then((res) => {\n    //       console.log(res);\n    //       if (res?.data.message === \"success\") {\n    //         swal(\"Video Uploaded Sucessfully\");\n    //       }\n    //     })\n    //     .catch((err) => {\n    //       console.log(err);\n    //     });\n    // }\n\n    // console.log(\"video\", video?.type?.split(\"/\")[0] === \"video\");\n    // console.log(\"video\", video?.type?.split(\"/\")[0] === \"image\");\n  };\n  return (\n    <div>\n      <div>\n        <div>\n          <Card>\n            <Row>\n              <Col lg=\"6\" sm=\"6\" md=\"6\">\n                <Row>\n                  <div className=\"d-flex container\">\n                    <h3 className=\"mt-2 mb-1 mx-3\"> Upload Your Gallary </h3>\n                  </div>\n                </Row>\n              </Col>\n              <Col>\n                <div className=\"d-flex justify-content-end container mt-2 mr-1\">\n                  <div>\n                    <Button\n                      onClick={() => {\n                        history.goBack();\n                        // history.push(\"/uploads\");\n                      }}\n                      color=\"primary\"\n                    >\n                      {\" \"}\n                      Back\n                    </Button>\n                  </div>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"mb-2 mt-2\">\n                <div className=\"container\">\n                  <div className=\"uplodsdata\">\n                    <Row className=\"uploadmain\">\n                      <Col>\n                        <div>\n                          <Label>\n                            <p style={{ color: \"red\" }}>\n                              png,jpg,jpeg,mp4-only{\" \"}\n                            </p>\n                          </Label>\n                          <Input\n                            name=\"file\"\n                            onChange={(e) => setvideo(e.target.files[0])}\n                            accept=\"video/mp4,.png,.jpg,.jpeg\"\n                            type=\"file\"\n                          />\n                        </div>\n                      </Col>\n                      <Col>\n                        <div className=\"buttonuploadv\">\n                          <Button\n                            onClick={handlevideoUpload}\n                            size=\"sm\"\n                            className=\"bntuploadsvideo mt-3\"\n                            color=\"primary\"\n                          >\n                            Upload\n                          </Button>\n                        </div>\n                      </Col>\n                    </Row>\n                  </div>\n                </div>\n              </Col>\n              {/* <Col>\n                <div className=\"d-flex justify-content-center\">\n                  <div>\n                    <h3 className=\"mt-1 mb-1\"> Upload Images</h3>\n                  </div>\n                </div>\n                <div className=\"container\">\n                  <div className=\"uplodsdata\">\n                    <Row className=\"uploadmain\">\n                      <Col>\n                        <div>\n                          <Input\n                            onChange={(e) => setimage(e.target.files[0])}\n                            // accept=\"image/*\"\n                            accept=\".png, .jpg, .jpeg\"\n                            type=\"file\"\n                          />\n                        </div>\n                      </Col>\n                      <Col>\n                        <div className=\"buttonuploadv\">\n                          <Button\n                            onClick={Uplaodimage}\n                            size=\"sm\"\n                            className=\"bntuploadsvideo\"\n                            color=\"primary\"\n                          >\n                            Upload Images\n                          </Button>\n                        </div>\n                      </Col>\n                    </Row>\n                  </div>\n                </div>\n              </Col> */}\n            </Row>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nUploads.propTypes = propTypes;\nUploads.defaultProps = defaultProps;\n// #endregion\n\nexport default Uploads;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;"],"sourceRoot":""}