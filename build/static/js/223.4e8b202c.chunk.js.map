{"version":3,"sources":["views/apps/userrequest/UserRequestList.js"],"names":["i","UserRideList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","userid","fullname","className","gender","dob","date_of_time","birthPlace","marital_status","occupation","topic_of_cnsrn","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","astroId","localStorage","getItem","console","log","axiosConfig","get","then","response","id","axios","error","this","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","tag","length","size","right","onClick","placeholder","onChange","e","target","value","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/223.4e8b202c.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport axiosConfig from \"../../../axiosConfig\";\nimport axios from \"axios\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\n//import classnames from \"classnames\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../assets/scss/pages/users.scss\";\nimport { Route } from \"react-router-dom\";\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\n\nclass UserRideList extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 100,\n        filter: true,\n      },\n\n      {\n        headerName: \"Name\",\n        field: \"fullname\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.userid?.fullname} </span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Gender\",\n        field: \"gender\t\",\n        filter: true,\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.gender}</span>\n            </div>\n          );\n        },\n      },\n      // {\n      //   headerName: \"Mobile No.\",\n      //   field: \"mobile\",\n      //   filter: true,\n      //   width: 200,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\n      //         <span>{params.data.userid?.mobile}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      {\n        headerName: \"DOB\",\n        field: \"dob\",\n        filter: true,\n        width: 100,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.userid?.dob}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Time Of Birth\",\n        field: \"date_of_time\",\n        filter: true,\n        width: 100,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params?.data?.date_of_time}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Birth City\",\n        field: \"birth_city\",\n        filter: true,\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.birthPlace}</span>\n            </div>\n          );\n        },\n      },\n\n      // {\n      //   headerName: \"Birth State\",\n      //   field: \"birth_state\",\n      //   filter: true,\n      //   width: 200,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div>\n      //         <span>{params.data.birth_state}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n\n      // {\n      //   headerName: \"Birth Country\",\n      //   field: \"birth_country\",\n      //   filter: true,\n      //   width: 200,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div>\n      //         <span>{params.data.birth_country}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n\n      {\n        headerName: \"Marital Status\",\n        field: \"marital_status\",\n        filter: true,\n        width: 150,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.marital_status}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Occupation\",\n        field: \"occupation\",\n        filter: true,\n        width: 180,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.occupation}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Topic of concern*\",\n        field: \"topic_of_cnsrn\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.topic_of_cnsrn}</span>\n            </div>\n          );\n        },\n      },\n\n      // {\n      //   headerName: \"Actions\",\n      //   field: \"sortorder\",\n      //   width: 200,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"actions cursor-pointer\">\n      //         {/* <Route render={({ history}) => (\n      //         <Eye\n      //           className=\"mr-50\"\n      //           size=\"25px\"\n      //           color=\"green\"\n      //           onClick={() =>\n      //           history.push(`/app/userride/viewUserRide/${params.data._id}`       )\n      //         }\n      //       />\n      //     )}\n      //   /> */}\n      //         {/* <Route render={({ history}) => (\n      //         <Edit\n      //           className=\"mr-50\"\n      //           size=\"25px\"\n      //           color=\"blue\"\n      //           onClick={() => history.push(\"/app/userride/editUserRide\"  )\n      //         }\n      //       />\n      //     )}\n      //   /> */}\n      //         {/* <Trash2\n      //           className=\"mr-50\"\n      //           size=\"25px\"\n      //           color=\"red\"\n      //           onClick={() => {\n      //             let selectedData = this.gridApi.getSelectedRows();\n      //             this.runthisfunction(params.data._id);\n      //             this.gridApi.updateRowData({ remove: selectedData });\n      //           }}\n      //         /> */}\n      //       </div>\n      //     );\n      //   },\n      // },\n    ],\n  };\n  async componentDidMount() {\n    let astroId = localStorage.getItem(\"astroId\");\n    console.log(astroId);\n    await axiosConfig\n      .get(`/admin/intekListByastro/${astroId}`)\n      .then((response) => {\n        console.log(response.data.data);\n        let rowData = response.data.data;\n        console.log(rowData);\n        this.setState({ rowData });\n      });\n  }\n\n  async runthisfunction(id) {\n    console.log(id);\n    await axios.get(`/${id}`).then(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      console.log(rowData),\n      (\n        <div>\n          <Breadcrumbs\n            breadCrumbTitle=\"Request User List\"\n            breadCrumbParent=\"Home\"\n            breadCrumbActive=\" Request User List \"\n          />\n\n          <Row className=\"app-user-list\">\n            <Col sm=\"12\"></Col>\n            <Col sm=\"12\">\n              <Card>\n                <Row className=\"m-2\">\n                  <Col>\n                    <h1 sm=\"6\" className=\"float-left\">\n                      Request User List\n                    </h1>\n                  </Col>\n                  {/* <Col>\n                    <Route\n                      render={({ history }) => (\n                        <Button\n                          className=\" btn btn-success float-right\"\n                          onClick={() => history.push(\"/app/user/addUser\")}\n                        >\n                          Add User\n                        </Button>\n                      )}\n                    />\n                  </Col> */}\n                </Row>\n                <CardBody>\n                  {this.state.rowData === null ? null : (\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                        <div className=\"mb-1\">\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                            <DropdownToggle tag=\"div\">\n                              {this.gridApi\n                                ? this.state.currenPageSize\n                                : \"\" * this.state.getPageSize -\n                                  (this.state.getPageSize - 1)}{\" \"}\n                              -{\" \"}\n                              {this.state.rowData.length -\n                                this.state.currenPageSize *\n                                  this.state.getPageSize >\n                              0\n                                ? this.state.currenPageSize *\n                                  this.state.getPageSize\n                                : this.state.rowData.length}{\" \"}\n                              of {this.state.rowData.length}\n                              <ChevronDown className=\"ml-50\" size={15} />\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                              <DropdownItem\n                                tag=\"div\"\n                                onClick={() => this.filterSize(20)}\n                              >\n                                20\n                              </DropdownItem>\n                              <DropdownItem\n                                tag=\"div\"\n                                onClick={() => this.filterSize(50)}\n                              >\n                                50\n                              </DropdownItem>\n                              <DropdownItem\n                                tag=\"div\"\n                                onClick={() => this.filterSize(100)}\n                              >\n                                100\n                              </DropdownItem>\n                              <DropdownItem\n                                tag=\"div\"\n                                onClick={() => this.filterSize(134)}\n                              >\n                                134\n                              </DropdownItem>\n                            </DropdownMenu>\n                          </UncontrolledDropdown>\n                        </div>\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                          <div className=\"table-input mr-1\">\n                            <Input\n                              placeholder=\"search...\"\n                              onChange={(e) =>\n                                this.updateSearchQuery(e.target.value)\n                              }\n                              value={this.state.value}\n                            />\n                          </div>\n                          <div className=\"export-btn\">\n                            <Button.Ripple\n                              color=\"primary\"\n                              onClick={() => this.gridApi.exportDataAsCsv()}\n                            >\n                              Export as CSV\n                            </Button.Ripple>\n                          </div>\n                        </div>\n                      </div>\n                      <ContextLayout.Consumer>\n                        {(context) => (\n                          <AgGridReact\n                            gridOptions={{}}\n                            rowSelection=\"multiple\"\n                            defaultColDef={defaultColDef}\n                            columnDefs={columnDefs}\n                            rowData={rowData}\n                            onGridReady={this.onGridReady}\n                            colResizeDefault={\"shift\"}\n                            animateRows={true}\n                            floatingFilter={false}\n                            pagination={true}\n                            paginationPageSize={this.state.paginationPageSize}\n                            pivotPanelShow=\"always\"\n                            enableRtl={context.state.direction === \"rtl\"}\n                          />\n                        )}\n                      </ContextLayout.Consumer>\n                    </div>\n                  )}\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      )\n    );\n  }\n}\nexport default UserRideList;\n"],"sourceRoot":""}