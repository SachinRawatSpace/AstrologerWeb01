{"version":3,"sources":["views/apps/report/ChatReport.js"],"names":["ChatReport","state","rowData","chatData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","userdeductedAmt","totalDuration","userId","fullname","createdAt","split","ChatHistoryList","setInterval","astroid","localStorage","getItem","axiosConfig","get","then","response","AllReport","value","type","setState","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","console","log","this","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","sm","tag","length","size","right","onClick","placeholder","onChange","e","target","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/207.62daa57d.chunk.js","sourcesContent":["/* eslint-disable array-callback-return */\nimport React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\n\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport \"../../../assets/scss/pages/users.scss\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport axiosConfig from \"../../../axiosConfig\";\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\n\nclass ChatReport extends React.Component {\n  state = {\n    rowData: [],\n    chatData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 100,\n        filter: true,\n      },\n\n      // {\n      //   headerName: \"Status\",\n      //   field: \"Status\",\n      //   filter: true,\n      //   width: 200,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div>\n      //         <span>{params.data?.Status}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n\n      {\n        headerName: \"Duration\",\n        field: \"duration\",\n        filter: true,\n        width: 180,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              {params?.data?.userdeductedAmt === 0 ? (\n                <>\n                  <span>Not Answered</span>\n                </>\n              ) : (\n                <>\n                  <span>{params.data?.totalDuration} Min</span>\n                </>\n              )}\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"UserName\",\n        field: \"duration\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <>\n                <span>{params.data?.userId.fullname}</span>\n              </>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Date\",\n        field: \"date\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data?.createdAt.split(\"T\")[0]}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Deducted Amount\",\n        field: \"Deducted Amount\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data?.userdeductedAmt}</span>\n            </div>\n          );\n        },\n      },\n    ],\n  };\n\n  componentDidMount() {\n    let astroid = localStorage.getItem(\"astroId\");\n    axiosConfig.get(`/user/astroChathistory/${astroid}`).then((response) => {\n      console.log(response);\n      let AllReport = response.data.data;\n      let rowData = AllReport?.filter((value) => {\n        if (value?.type === \"Chat\") {\n          return value;\n        }\n      });\n      this.setState({ rowData });\n    });\n    this.ChatHistoryList();\n  }\n  ChatHistoryList = () => {\n    setInterval(() => {\n      let astroid = localStorage.getItem(\"astroId\");\n      axiosConfig.get(`/user/astroChathistory/${astroid}`).then((response) => {\n        let AllReport = response.data.data;\n        let rowData = AllReport?.filter((value) => {\n          if (value?.type === \"Chat\") {\n            return value;\n          }\n        });\n        this.setState({ rowData });\n      });\n    }, 10000);\n  };\n\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      <div>\n        <Breadcrumbs\n          breadCrumbTitle=\"Chat Report\"\n          breadCrumbParent=\"Home\"\n          breadCrumbActive=\"Chat Report\"\n        />\n        <Row className=\"app-user-list\">\n          <Col sm=\"12\"></Col>\n          <Col sm=\"12\">\n            <Card>\n              <Row className=\"m-2\">\n                <Col>\n                  <h1 sm=\"6\" className=\"float-left\">\n                    Chat Reports\n                  </h1>\n                </Col>\n              </Row>\n              <CardBody>\n                {this.state.rowData === null ? null : (\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                      <div className=\"mb-1\">\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                          <DropdownToggle tag=\"div\">\n                            {this.gridApi\n                              ? this.state.currenPageSize\n                              : \"\" * this.state.getPageSize -\n                                (this.state.getPageSize - 1)}{\" \"}\n                            -{\" \"}\n                            {this.state.rowData.length -\n                              this.state.currenPageSize *\n                                this.state.getPageSize >\n                            0\n                              ? this.state.currenPageSize *\n                                this.state.getPageSize\n                              : this.state.rowData.length}{\" \"}\n                            of {this.state.rowData.length}\n                            <ChevronDown className=\"ml-50\" size={15} />\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(20)}\n                            >\n                              20\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(50)}\n                            >\n                              50\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(100)}\n                            >\n                              100\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(134)}\n                            >\n                              134\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </div>\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                        <div className=\"table-input mr-1\">\n                          <Input\n                            placeholder=\"search...\"\n                            onChange={(e) =>\n                              this.updateSearchQuery(e.target.value)\n                            }\n                            value={this.state.value}\n                          />\n                        </div>\n                        <div className=\"export-btn\">\n                          <Button.Ripple\n                            color=\"primary\"\n                            onClick={() => this.gridApi.exportDataAsCsv()}\n                          >\n                            Export as CSV\n                          </Button.Ripple>\n                        </div>\n                      </div>\n                    </div>\n                    <ContextLayout.Consumer>\n                      {(context) => (\n                        <AgGridReact\n                          gridOptions={{}}\n                          rowSelection=\"multiple\"\n                          defaultColDef={defaultColDef}\n                          columnDefs={columnDefs}\n                          rowData={rowData}\n                          onGridReady={this.onGridReady}\n                          colResizeDefault={\"shift\"}\n                          animateRows={true}\n                          floatingFilter={false}\n                          pagination={true}\n                          paginationPageSize={this.state.paginationPageSize}\n                          pivotPanelShow=\"always\"\n                          enableRtl={context.state.direction === \"rtl\"}\n                        />\n                      )}\n                    </ContextLayout.Consumer>\n                  </div>\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\nexport default ChatReport;\n"],"sourceRoot":""}