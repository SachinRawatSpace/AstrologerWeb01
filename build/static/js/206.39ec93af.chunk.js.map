{"version":3,"sources":["views/apps/report/CallReport.js"],"names":["CallReport","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","Status","userdeductedAmt","Duration","userid","fullname","createdAt","split","CallHistoryList","setInterval","astroid","localStorage","getItem","axiosConfig","get","then","response","setState","onGridReady","gridApi","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","sm","tag","length","size","right","onClick","placeholder","onChange","e","target","value","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/206.39ec93af.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\n\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport \"../../../assets/scss/pages/users.scss\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Route } from \"react-router-dom\";\n\nimport axiosConfig from \"../../../axiosConfig\";\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\n\nclass CallReport extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 100,\n        filter: true,\n      },\n\n      {\n        headerName: \"Status\",\n        field: \"Status\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data?.Status}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Duration\",\n        field: \"duration\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              {params?.data?.userdeductedAmt === 0 ? (\n                <>\n                  <span>Not Answered</span>\n                </>\n              ) : (\n                <>\n                  <span>{params.data?.Duration} Min</span>\n                </>\n              )}\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"UserName\",\n        field: \"duration\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <>\n                <span>{params.data?.userid?.fullname}</span>\n              </>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Date\",\n        field: \"date\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data?.createdAt.split(\"T\")[0]}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Deducted Amount\",\n        field: \"Deducted Amount\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data?.userdeductedAmt}</span>\n            </div>\n          );\n        },\n      },\n\n      // {\n      //   headerName: \"Actions\",\n      //   field: \"sortorder\",\n      //   width: 200,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"actions cursor-pointer\">\n      //         <Route\n      //           render={({ history }) => (\n      //             <Eye\n      //               className=\"mr-50\"\n      //               size=\"25px\"\n      //               color=\"green\"\n      //               onClick={() =>\n      //                 history.push(\n      //                   `/app/customer/viewCustomer/${params.data._id}`\n      //                 )\n      //               }\n      //             />\n      //           )}\n      //         />\n      //         <Route\n      //           render={({ history }) => (\n      //             <Edit\n      //               className=\"mr-50\"\n      //               size=\"25px\"\n      //               color=\"blue\"\n      //               onClick={() => history.push(\"/app/customer/editCustomer\")}\n      //             />\n      //           )}\n      //         />\n      //         <Trash2\n      //           className=\"mr-50\"\n      //           size=\"25px\"\n      //           color=\"red\"\n      //           onClick={() => {\n      //             let selectedData = this.gridApi.getSelectedRows();\n      //             this.runthisfunction(params.data._id);\n      //             this.gridApi.updateRowData({ remove: selectedData });\n      //           }}\n      //         />\n      //       </div>\n      //     );\n      //   },\n      // },\n    ],\n  };\n  componentDidMount() {\n    let astroid = localStorage.getItem(\"astroId\");\n    axiosConfig.get(`/user/astroCallHistory/${astroid}`).then((response) => {\n      let rowData = response.data.data;\n      this.setState({ rowData });\n    });\n    this.CallHistoryList();\n  }\n  CallHistoryList = () => {\n    setInterval(() => {\n      let astroid = localStorage.getItem(\"astroId\");\n      axiosConfig.get(`/user/astroCallHistory/${astroid}`).then((response) => {\n        let rowData = response.data.data;\n        this.setState({ rowData });\n      });\n    }, 10000);\n  };\n\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      // console.log(rowData),\n      <div>\n        <Breadcrumbs\n          breadCrumbTitle=\"Call Report\"\n          breadCrumbParent=\"Home\"\n          breadCrumbActive=\"Call Report\"\n        />\n        <Row className=\"app-user-list\">\n          <Col sm=\"12\"></Col>\n          <Col sm=\"12\">\n            <Card>\n              <Row className=\"m-2\">\n                <Col>\n                  <h1 sm=\"6\" className=\"float-left\">\n                    Call Reports\n                  </h1>\n                </Col>\n                {/* <Col>\n                  <Route\n                    render={({ history }) => (\n                      <Button\n                        className=\" btn btn-danger float-right\"\n                        onClick={() =>\n                          history.push(\"/app/customer/addCustomer\")\n                        }\n                      >\n                        Add Call Details\n                      </Button>\n                    )}\n                  />\n                </Col> */}\n              </Row>\n              <CardBody>\n                {this.state.rowData === null ? null : (\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                      <div className=\"mb-1\">\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                          <DropdownToggle tag=\"div\">\n                            {this.gridApi\n                              ? this.state.currenPageSize\n                              : \"\" * this.state.getPageSize -\n                                (this.state.getPageSize - 1)}{\" \"}\n                            -{\" \"}\n                            {this.state.rowData.length -\n                              this.state.currenPageSize *\n                                this.state.getPageSize >\n                            0\n                              ? this.state.currenPageSize *\n                                this.state.getPageSize\n                              : this.state.rowData.length}{\" \"}\n                            of {this.state.rowData.length}\n                            <ChevronDown className=\"ml-50\" size={15} />\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(20)}\n                            >\n                              20\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(50)}\n                            >\n                              50\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(100)}\n                            >\n                              100\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(134)}\n                            >\n                              134\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </div>\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                        <div className=\"table-input mr-1\">\n                          <Input\n                            placeholder=\"search...\"\n                            onChange={(e) =>\n                              this.updateSearchQuery(e.target.value)\n                            }\n                            value={this.state.value}\n                          />\n                        </div>\n                        <div className=\"export-btn\">\n                          <Button.Ripple\n                            color=\"primary\"\n                            onClick={() => this.gridApi.exportDataAsCsv()}\n                          >\n                            Export as CSV\n                          </Button.Ripple>\n                        </div>\n                      </div>\n                    </div>\n                    <ContextLayout.Consumer>\n                      {(context) => (\n                        <AgGridReact\n                          gridOptions={{}}\n                          rowSelection=\"multiple\"\n                          defaultColDef={defaultColDef}\n                          columnDefs={columnDefs}\n                          rowData={rowData}\n                          onGridReady={this.onGridReady}\n                          colResizeDefault={\"shift\"}\n                          animateRows={true}\n                          floatingFilter={false}\n                          pagination={true}\n                          paginationPageSize={this.state.paginationPageSize}\n                          pivotPanelShow=\"always\"\n                          enableRtl={context.state.direction === \"rtl\"}\n                        />\n                      )}\n                    </ContextLayout.Consumer>\n                  </div>\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\nexport default CallReport;\n"],"sourceRoot":""}